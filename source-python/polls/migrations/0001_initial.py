# Generated by Django 3.1.1 on 2020-09-19 03:38

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CommentLikes',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('static', models.CharField(db_column='Status', max_length=255)),
            ],
            options={
                'db_table': 'comment_likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommentPictures',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('bgcolor', models.CharField(blank=True, db_column='BgColor', max_length=10, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('photodetailurl', models.CharField(blank=True, db_column='PhotoDetailUrl', max_length=255, null=True)),
                ('totallikes', models.IntegerField(blank=True, db_column='TotalLikes', null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
                ('width', models.IntegerField(blank=True, db_column='Width', null=True)),
            ],
            options={
                'db_table': 'comment_pictures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('avgrating', models.FloatField(blank=True, db_column='AvgRating', null=True)),
                ('createddate', models.CharField(blank=True, db_column='CreatedDate', max_length=255, null=True)),
                ('createdontimediff', models.CharField(blank=True, db_column='CreatedOnTimeDiff', max_length=255, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('devicename', models.CharField(blank=True, db_column='DeviceName', max_length=255, null=True)),
                ('devicetype', models.IntegerField(blank=True, db_column='DeviceType', null=True)),
                ('deviceurl', models.CharField(blank=True, db_column='DeviceUrl', max_length=255, null=True)),
                ('isfirstuserreview', models.IntegerField(blank=True, db_column='IsFirstUserReview', null=True)),
                ('isliked', models.IntegerField(blank=True, db_column='IsLiked', null=True)),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('totallike', models.IntegerField(blank=True, db_column='TotalLike', null=True)),
                ('totalpictures', models.IntegerField(blank=True, db_column='TotalPictures', null=True)),
                ('totalview', models.IntegerField(blank=True, db_column='TotalView', null=True)),
                ('typename', models.CharField(blank=True, db_column='TypeName', max_length=255, null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
            ],
            options={
                'db_table': 'comments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('avatar', models.CharField(blank=True, db_column='Avatar', max_length=255, null=True)),
                ('displayname', models.TextField(blank=True, db_column='DisplayName', null=True)),
                ('isfollow', models.IntegerField(blank=True, db_column='IsFollow', null=True)),
                ('isverified', models.IntegerField(blank=True, db_column='IsVerified', null=True)),
                ('level', models.CharField(blank=True, db_column='Level', max_length=20, null=True)),
                ('rank', models.IntegerField(blank=True, db_column='Rank', null=True)),
                ('totalpictures', models.IntegerField(blank=True, db_column='TotalPictures', null=True)),
                ('totalreviews', models.IntegerField(blank=True, db_column='TotalReviews', null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
                ('urlalbums', models.CharField(blank=True, db_column='UrlAlbums', max_length=255, null=True)),
                ('urlreviews', models.CharField(blank=True, db_column='UrlReviews', max_length=255, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True)),
                ('verifyingpercent', models.IntegerField(blank=True, db_column='VerifyingPercent', null=True)),
                ('static', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
            ],
            options={
                'db_table': 'customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurants',
            fields=[
                ('id', models.IntegerField(db_column='Id', primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=255, null=True)),
                ('avgrating', models.IntegerField(blank=True, db_column='AvgRating', null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('distance', models.FloatField(blank=True, db_column='Distance', null=True)),
                ('haspromotion', models.IntegerField(blank=True, db_column='HasPromotion', null=True)),
                ('isopening', models.IntegerField(blank=True, db_column='IsOpening', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='Latitude', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='Longitude', null=True)),
                ('locationurlrewritename', models.CharField(blank=True, db_column='LocationUrlRewriteName', max_length=255, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('rescreatedon', models.CharField(blank=True, db_column='ResCreatedOn', max_length=255, null=True)),
                ('photourl', models.CharField(blank=True, db_column='PhotoUrl', max_length=255, null=True)),
                ('pricemax', models.IntegerField(blank=True, db_column='PriceMax', null=True)),
                ('pricemaxdisplay', models.CharField(blank=True, db_column='PriceMaxDisplay', max_length=10, null=True)),
                ('pricemin', models.IntegerField(blank=True, db_column='PriceMin', null=True)),
                ('pricemindisplay', models.CharField(blank=True, db_column='PriceMinDisplay', max_length=10, null=True)),
                ('promotionid', models.IntegerField(blank=True, db_column='PromotionId', null=True)),
                ('promotiontitle', models.CharField(blank=True, db_column='PromotionTitle', max_length=255, null=True)),
                ('promotionurl', models.CharField(blank=True, db_column='PromotionUrl', max_length=255, null=True)),
                ('resurlalbums', models.CharField(blank=True, db_column='ResUrlAlbums', max_length=255, null=True)),
                ('resurlreviews', models.CharField(blank=True, db_column='ResUrlReviews', max_length=255, null=True)),
                ('static', models.IntegerField(blank=True, db_column='Status', null=True)),
                ('restaurantstatus', models.IntegerField(blank=True, db_column='RestaurantStatus', null=True)),
                ('totalcheckins', models.IntegerField(blank=True, db_column='TotalCheckIns', null=True)),
                ('totalfavourites', models.IntegerField(blank=True, db_column='TotalFavourites', null=True)),
                ('totalpictures', models.IntegerField(blank=True, db_column='TotalPictures', null=True)),
                ('totalreviews', models.IntegerField(blank=True, db_column='TotalReviews', null=True)),
                ('totalsaves', models.IntegerField(blank=True, db_column='TotalSaves', null=True)),
                ('totalservice', models.IntegerField(blank=True, db_column='TotalService', null=True)),
                ('url', models.CharField(blank=True, db_column='Url', max_length=255, null=True)),
                ('urlrewritename', models.CharField(blank=True, db_column='UrlRewriteName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'restaurants',
                'managed': False,
            },
        ),
    ]
